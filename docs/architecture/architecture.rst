============
Architecture
============


Overview
========

The following picture illustrates the architecture of |Adama|:

.. only:: html

   .. figure:: workers.svg
      :align: center
      :width: 50 %

.. only:: latex

   .. figure:: workers.pdf
      :align: center
      :width: 90 %

The main components are:

- |Adama| itself is a Python application running over an Apache web
  server, providing the REST endpoints and business logic. (see
  :ref:`api`).

- A data store (Redis) collects a registry of adapters.

- A task queue (RabbitMQ) distributes work to the adapters for each
  request to the ``query`` endpoint.

- The workers are Docker containers that get created through the
  ``register`` endpoint, and get started and shutdown under Adama
  command, depending on the load of the ``query`` endpoint.  The
  workers are continuously consuming work from the task queue.

- The *user module* in the picture is the adapter provided by the
  developer at registration time (see :ref:`adapter_api`).

- The user module, data sources, and 3rd party protocol (colored blue
  in the picture) specify the parts under control of the developer
  role (see :ref:`developer_role`).

- Elasticsearch intercepts objects generated by the queries and
  creates an aggregated database that allows extra capabalities for
  searching and analyzing the data sources.  Data sources can
  opt-in or opt-out of this functionality at any time.


.. _api:

API
===




.. _adapter_api:

Adapter API
===========


.. |Adama| replace:: *Adama*
